# location on the disk where dbd is
DBD_PATH=/usr/local/bin/dbd

# dbd config
DBD_DATABASE_ID=database_name
DBD_API_KEY=some-random-api-key
DBD_URL=https://subdomain.domain.co.uk/guid/

# tables whose *records* should not be included in the cloned database, separated by commas
EXCLUDED_TABLES="table1,table2"

# what should be done with the copied database
# one of: 
# (1) local - downloads a copy of the database and creates a replica on this machine
# (2) docker - downloads a copy of the database, spins a new docker instance and restored the db inside
# (3) backup - downloads a copy of the database within a chosen location
DESTINATION_TARGET="docker"

# `local` config (if selected above)
# destination Mysql credentials
DESTINATION_DB_USER=user
DESTINATION_DB_PASS='pass' # in single quotes for escaping special characters

# `docker` config (if selected above)
# TAG to use, for mysql, get it from https://hub.docker.com/_/mysql?tab=tags&page=1&ordering=last_updated
# Examples: mysql:latest | mysql:5.7 | mysql:5.6 | mysql:5.5
DOCKER_TAG="mysql:5.7"
# should we spin a new docker instance?
DOCKER_NEW_INSTANCE=true
# if not spinning a new instance, specify the one to use
DOCKER_EXISTING_INSTANCE_NAME="mysql-5-7" 
# the mysql root password to use for a new / existing instance
DOCKER_ROOT_PASSWORD="my-secret-pw"

# `backup` config (if selected above)
# path where gzip files will be stored
BACKUP_PATH=/path/to/backup/location/
